[{"/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/index.tsx":"1","/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/reportWebVitals.ts":"2","/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/App.tsx":"3","/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/hooks/WalletProvider.tsx":"4","/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/hooks/useContact.ts":"5","/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/hooks/useSigner.ts":"6"},{"size":1051,"mtime":1651161391647,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1651139683822,"results":"9","hashOfConfig":"8"},{"size":1209,"mtime":1651162312778,"results":"10","hashOfConfig":"8"},{"size":2534,"mtime":1651162172878,"results":"11","hashOfConfig":"8"},{"size":359,"mtime":1651162143799,"results":"12","hashOfConfig":"8"},{"size":401,"mtime":1651162105904,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"cq6pu9",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/index.tsx",["32"],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport WalletProvider from \"./hooks/WalletProvider\";\n// import Web3Provider from \"web3-react\";\n// import { Connectors } from \"web3-react\";\n// const { InjectedConnector } = Connectors;\nconst CHAIN_ID = 31337;\n\n// const Metamask = new InjectedConnector({\n//   supportedNetworks: [CHAIN_ID],\n// });\n// export const connectors = {\n//   Metamask,\n// };\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <WalletProvider>\n      <App />\n    </WalletProvider>\n    {/* <Web3Provider connectors={connectors} libraryName={\"ethers.js\"}> */}\n    {/* </Web3Provider> */}\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/reportWebVitals.ts",[],["33","34"],"/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/App.tsx",["35"],"import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport { useContract } from \"./hooks/useContact\";\nimport { useSigner } from \"./hooks/useSigner\";\n// import { useWeb3Context } from \"web3-react\";\n// https://www.npmjs.com/package/web3-react\nfunction App() {\n  const contract = useContract();\n  const signer = useSigner();\n  useEffect(() => {\n    (async () => {\n      // console.log(contract?.address);\n      console.log(\"address: \", await signer?.getAddress());\n      /* @ts-ignore */\n      console.log(await contract.getCustomer());\n    })();\n  }, [signer]);\n\n  // const context = useWeb3Context();\n\n  // console.log(context);\n  // context.setFirstValidConnector([\"Metamask\"]);\n\n  // console.log(context);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/hooks/WalletProvider.tsx",["36","37","38","39"],"import { Contract, ethers } from \"ethers\";\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  Context,\n} from \"react\";\n// import { CHAIN_ID } from \"../App\";\nimport contractAddress from \"../.env/contract-address.json\";\nimport CHAIN_ECOMMERCE from \"../artifacts/contracts/CHAIN_ECOMMERCE.sol/CHAIN_ECOMMERCE.json\";\nconst CHAIN_ID = 31337;\n\ninterface WalletContextI {\n  provider: ethers.providers.Web3Provider | undefined;\n  signer: ethers.providers.JsonRpcSigner | undefined;\n  contract: Contract | undefined;\n}\nexport const WalletContext = createContext<\n  | {\n      provider: ethers.providers.Web3Provider;\n      signer: ethers.providers.JsonRpcSigner;\n      contract: Contract;\n    }\n  | undefined\n>(undefined);\n\nconst getProvider = () => {\n  const { ethereum } = window;\n  if (ethereum && ethereum.isMetaMask) {\n    const provider = new ethers.providers.Web3Provider(\n      /* @ts-ignore */\n      window.ethereum,\n      { chainId: CHAIN_ID, name: \"localhost\" }\n    );\n    return provider;\n  }\n  throw new Error(\"Metamask is not installed\");\n};\nconst getSigner = (provider?: ethers.providers.Web3Provider) =>\n  (provider || getProvider()).getSigner();\n\nconst getContract = (signer?: ethers.providers.JsonRpcSigner) => {\n  return new ethers.Contract(\n    contractAddress.address,\n    CHAIN_ECOMMERCE.abi,\n    signer || getSigner()\n  );\n};\n\nconst WalletProvider = ({ children }: { children: JSX.Element }) => {\n  const [provider, setProvider] = useState(getProvider());\n  const [signer, setSigner] = useState(getSigner(provider));\n  const [contract, setContract] = useState(getContract(signer));\n  useEffect(() => {\n    const init = async () => {\n      // console.log(\"Wallet provider init\");\n      const provider = getProvider();\n      window.ethereum.on(\"accountsChanged\", () => {\n        // console.log(provider);\n        const signer = getSigner(provider);\n        setSigner(signer);\n        setContract(getContract(signer));\n        // console.log(\"accountsChanged\");\n      });\n      provider.on(\"network\", (newNetwork, oldNetwork) => {\n        // console.log(\"network changed\");\n        oldNetwork && window.location.reload();\n      });\n      /* @ts-ignore */\n      window.ethereum.on(\"chainChanged\", () => window.location.reload());\n    };\n    init();\n  }, []);\n\n  return (\n    <WalletContext.Provider value={{ provider, signer, contract }}>\n      {children}\n    </WalletContext.Provider>\n  );\n};\n\nexport default WalletProvider;\n\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}\n//   \"any\"\n","/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/hooks/useContact.ts",["40","41"],"import { ethers } from \"ethers\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { WalletContext } from \"./WalletProvider\";\n\nexport const useContract = (): ethers.Contract | undefined => {\n  const context = useContext(WalletContext);\n  if (context?.contract) {\n    const { contract } = context;\n    return contract;\n  }\n  return undefined;\n};\n","/Users/davidpaley/Desktop/chain_ecommerce_frontend/src/hooks/useSigner.ts",["42","43"],"import { ethers } from \"ethers\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { WalletContext } from \"./WalletProvider\";\n\nexport const useSigner = (): ethers.providers.JsonRpcSigner | undefined => {\n  const context = useContext(WalletContext);\n  if (context?.signer) {\n    const { signer } = context;\n    console.log(\"signer changed\");\n    return signer;\n  }\n  return undefined;\n};\n",{"ruleId":"44","severity":1,"message":"45","line":10,"column":7,"nodeType":"46","messageId":"47","endLine":10,"endColumn":15},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":18,"column":6,"nodeType":"54","endLine":18,"endColumn":14,"suggestions":"55"},{"ruleId":"44","severity":1,"message":"56","line":4,"column":3,"nodeType":"46","messageId":"47","endLine":4,"endColumn":13},{"ruleId":"44","severity":1,"message":"57","line":7,"column":3,"nodeType":"46","messageId":"47","endLine":7,"endColumn":10},{"ruleId":"44","severity":1,"message":"58","line":14,"column":11,"nodeType":"46","messageId":"47","endLine":14,"endColumn":25},{"ruleId":"44","severity":1,"message":"59","line":52,"column":20,"nodeType":"46","messageId":"47","endLine":52,"endColumn":31},{"ruleId":"44","severity":1,"message":"60","line":2,"column":22,"nodeType":"46","messageId":"47","endLine":2,"endColumn":31},{"ruleId":"44","severity":1,"message":"61","line":2,"column":33,"nodeType":"46","messageId":"47","endLine":2,"endColumn":41},{"ruleId":"44","severity":1,"message":"60","line":2,"column":22,"nodeType":"46","messageId":"47","endLine":2,"endColumn":31},{"ruleId":"44","severity":1,"message":"61","line":2,"column":33,"nodeType":"46","messageId":"47","endLine":2,"endColumn":41},"@typescript-eslint/no-unused-vars","'CHAIN_ID' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contract'. Either include it or remove the dependency array.","ArrayExpression",["64"],"'useContext' is defined but never used.","'Context' is defined but never used.","'WalletContextI' is defined but never used.","'setProvider' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [contract, signer]",{"range":"67","text":"68"},[591,599],"[contract, signer]"]